
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Rui
 */
public class trans extends javax.swing.JFrame {
    int sid;
    String bordate="",curdate,tid="";
    /**
     * Creates new form trans
     */
    public trans(int sid) {
        this.sid=sid;
        initComponents();
       String k= jLabel1.getText();
       jLabel1.setText(k+" "+sid);
         try {
        Class.forName("oracle.jdbc.OracleDriver");
        

        Connection conn;
           
                conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE", "LibJirk", "1234");
             Statement stmt = conn.createStatement();
             
               String query;
        
                boolean check = true;
            int curday, prevday,fine,days; 
            query = "SELECT  T_BOR_DATE,T_ID,T_RET_DATE FROM TRANSACTION WHERE S_ID = "+sid ;
             
             ResultSet rs = stmt.executeQuery(query);
            
            while(rs.next()){
            bordate = rs.getString(1);                 
            tid = rs.getString(2);
            if(rs.getString(3)!=null){
            check = false;
            continue;
            }
            
            if(bordate ==null){
            check = false;
            continue;
            }
            if(check){
                
            DateFormat dateFormat = new SimpleDateFormat("dd-MMM-yy"); 
            DateFormat input = new  SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
            java.util.Date date = new java.util.Date();
            Date d= input.parse(bordate);
            bordate = dateFormat.format(d);
                System.out.println(bordate);
           
        curdate = dateFormat.format(date);          
            curday = Integer.parseInt(curdate.substring(0,2));
        prevday = Integer.parseInt(bordate.substring(0,2));
        days = curday - prevday;
        if(days <0){
        fine =0;
        }else{
        fine = (days*3);
                
           query = "UPDATE TRANSACTION SET T_FINE ="+fine+ ", T_FINE_STATUS = 'OVERDUE' WHERE S_ID ="+sid +"AND T_ID="+tid;
            stmt.execute(query);
        }  
            
            
            
            }   
            
            } 
               
               
               
         query = "SELECT b.B_ID,b.B_TITLE, t.T_BOR_DATE,t.T_RET_DATE,t.T_DUE_DATE,t.T_FINE,t.T_FINE_STATUS FROM TRANSACTION t, BOOK b WHERE t.S_ID="+sid +"OR t.B_ID = b.B_ID";     
          rs = stmt.executeQuery(query);
           String cdate;
          SimpleDateFormat sdf = new SimpleDateFormat("MMM dd, yyyy");
           DateFormat input = new  SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
         Date tdate;
          int i=0,j=0;
            while(rs.next()){
                
            jTable3.setValueAt(rs.getString(1),i,j++);
            jTable3.setValueAt(rs.getString(2),i,j++);
             tdate= input.parse(rs.getString(3));
            cdate = sdf.format(tdate);
            jTable3.setValueAt(cdate,i,j++);
            tdate= input.parse(rs.getString(5));
            cdate = sdf.format(tdate);
            jTable3.setValueAt(cdate,i,j++);
            if(rs.getString(3)!=null){
                tdate= input.parse(rs.getString(4));
            cdate = sdf.format(tdate);
            jTable3.setValueAt(cdate,i,j++);
            }else{
            jTable3.setValueAt(rs.getString(4),i,j++);
            }
            jTable3.setValueAt(rs.getString(6),i,j++);
            jTable3.setValueAt(rs.getString(7),i,j++);
            i++;
            j=0;
            
            }
            
            
         }catch(Exception e){
             System.out.println(e);}
        
        
        
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(750, 400));
        setResizable(false);

        jLabel1.setText("STUDENT ID:");

        jLabel2.setText("STUDENT TRANSACTION");

        jButton1.setText("Close");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "BOOK ID", "BOOK TITLE", "DATE BORROWED", "DUE DATE", "DATE RETURNED", "FINE", "FINE STATUS"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable3.setPreferredSize(new java.awt.Dimension(400, 300));
        jTable3.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(jTable3);
        if (jTable3.getColumnModel().getColumnCount() > 0) {
            jTable3.getColumnModel().getColumn(0).setResizable(false);
            jTable3.getColumnModel().getColumn(1).setResizable(false);
            jTable3.getColumnModel().getColumn(2).setResizable(false);
            jTable3.getColumnModel().getColumn(3).setResizable(false);
            jTable3.getColumnModel().getColumn(4).setResizable(false);
            jTable3.getColumnModel().getColumn(5).setResizable(false);
            jTable3.getColumnModel().getColumn(6).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addGap(534, 534, 534)
                            .addComponent(jButton1))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(650, 650, 650)))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 727, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable3;
    // End of variables declaration//GEN-END:variables
}
